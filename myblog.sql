-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: localhost
-- Generation Time: Oct 10, 2024 at 03:57 PM
-- Server version: 10.4.28-MariaDB
-- PHP Version: 8.2.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `myblog`
--

-- --------------------------------------------------------

--
-- Table structure for table `categories`
--

CREATE TABLE `categories` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `create_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `categories`
--

INSERT INTO `categories` (`id`, `name`, `create_at`) VALUES
(1, 'Web Development', '2024-10-07 14:43:46'),
(2, 'Ai', '2024-10-07 14:43:46'),
(3, 'Cyber security', '2024-10-07 15:02:23'),
(4, 'Java', '2024-10-07 15:53:54'),
(5, 'Ajax', '2024-10-07 15:02:23'),
(6, 'React Js', '2024-10-07 15:02:23'),
(7, 'Next.js', '2024-10-07 15:02:23'),
(8, 'Node.js', '2024-10-07 15:02:23'),
(9, 'Django', '2024-10-07 15:02:23'),
(10, 'Laravel', '2024-10-07 15:02:23');

-- --------------------------------------------------------

--
-- Table structure for table `posts`
--

CREATE TABLE `posts` (
  `id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `image` varchar(255) NOT NULL,
  `description` longtext NOT NULL,
  `category_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `create_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `posts`
--

INSERT INTO `posts` (`id`, `title`, `image`, `description`, `category_id`, `user_id`, `create_at`) VALUES
(1, 'How artificial intelligence is transforming the world', 'https://www.brookings.edu/wp-content/uploads/2018/04/robotics.jpg?resize=2048,1363', 'Most people are not very familiar with the concept of artificial intelligence (AI). As an illustration, when 1,500 senior business leaders in the United States in 2017 were asked about AI, only 17 percent said they were familiar with it.1 A number of them were not sure what it was or how it would affect their particular companies. They understood there was considerable potential for altering business processes, but were not clear how AI could be deployed within their own organizations.\n\nDespite its widespread lack of familiarity, AI is a technology that is transforming every walk of life. It is a wide-ranging tool that enables people to rethink how we integrate information, analyze data, and use the resulting insights to improve decisionmaking. Our hope through this comprehensive overview is to explain AI to an audience of policymakers, opinion leaders, and interested observers, and demonstrate how AI already is altering the world and raising important questions for society, the economy, and governance.\n\nIn this paper, we discuss novel applications in finance, national security, health care, criminal justice, transportation, and smart cities, and address issues such as data access problems, algorithmic bias, AI ethics and transparency, and legal liability for AI decisions. We contrast the regulatory approaches of the U.S. and European Union, and close by making a number of recommendations for getting the most out of AI while still protecting important human values.2\n\nIn order to maximize AI benefits, we recommend nine steps for going forward:\n\nEncourage greater data access for researchers without compromising users’ personal privacy,\ninvest more government funding in unclassified AI research,\npromote new models of digital education and AI workforce development so employees have the skills needed in the 21st-century economy,\ncreate a federal AI advisory committee to make policy recommendations,\nengage with state and local officials so they enact effective policies,\nregulate broad AI principles rather than specific algorithms,\ntake bias complaints seriously so AI does not replicate historic injustice, unfairness, or discrimination in data or algorithms,\nmaintain mechanisms for human oversight and control, and\npenalize malicious AI behavior and promote cybersecurity.\n', 2, 1, '2024-10-09 18:21:20'),
(2, 'Website Development: A Beginner’s Guide', 'https://thumbor.forbes.com/thumbor/fit-in/1290x/https://www.forbes.com/advisor/wp-content/uploads/2023/10/Website-Development.jpg', 'What Is Website Development?\nSimply put, website development is the process of creating and building a website. While it can be as simple as putting together a plain text page, in most modern scenarios, it requires the use of complex coding, in-depth web applications and design testing and implementation.\n\nThe steps to develop a website might vary depending on the specific project but, generally, the process starts with planning and research. From there, a developer might work with a designer to create a wireframe of what the site should look like. Next is the front-end and back-end development that involves heavy use of programming languages.\n\nOnce the site is set up, the developer will test it to identify bugs and errors. When all looks good, the developer can then set it up with a hosting provider and deploy it live on the web.\n\nWhen creating a website, developers need to utilize a number of technical, multidisciplinary skills. They’ll need the ability to solve problems, especially if a piece of coding isn’t working as expected. They’ll also need some creative thinking and design prowess to ensure sites are functional and unique.\n\nWhat Is Web Design?\nWeb development and web design are not quite the same thing. While the two professions do have some overlap, web developers typically focus on how things work while web designers focus on how things look. In other words, a developer is responsible for building the structure of a site while a designer is responsible for colors, branding and layout.\n\nWebsite development typically requires more knowledge of coding and programming languages while web designers might be able to get away with less knowledge. There is web design software that can help you design a website with no coding knowledge.\n\nHere’s a closer look at the differences between the two.\n\n\nWebsite Development	Website Design\nKey Focus	Functionality and interactivity of technical aspects	Visual aesthetics and user experience\nAreas of Responsibility	Coding, server-side logic and functionality	Layout, color schemes, typography and imagery\nSkills Required	Multiple programming languages and frameworks	Design tools and design principles\nProgramming Languages Typically Used	HTML, CSS, PHP, JavaScript, Python, Ruby, C/C++ and more	HTML, CSS, PHP and JavaScript\n3 Types of Web Development\nBecause web development is such a multidisciplinary field, developers usually specialize in either front-end or back-end development. However, skilled developers may be confident enough to tackle full-stack web development. Here’s a closer look at what these types of web development mean.', 1, 2, '2024-10-09 18:21:38'),
(3, 'The Wiretap: The Biggest DDoS Attack Ever Didn’t Cause Any Noticeable Damage', 'https://imageio.forbes.com/specials-images/imageserve/66fd4653ce5cf82e383b0935/DDoS/0x0.jpg?format=jpg&width=1440', 'The most powerful distributed denial of service (DDoS) attack ever was launched in September, but caused little to no damage.\r\n\r\nThat’s according to Cloudflare, a web security provider, which said its systems automatically detected the attacks, absorbing the massive influx of traffic across its own servers before it could flood and take down websites and apps like a DDoS normally would. The attacks peaked when the unknown hackers sent traffic at 3.8 terabytes per second to a target server, mostly firing data sent over the User Datagram Protocol (UDP), peaking at 2.14 billion packets per second. UDP is typically used for apps that need fast data transfer, like online video chat and games.\r\n\r\nThe attack came as part of a month-long campaign, which combined the power of hacked networking equipment and web servers. The attackers were targeting customers across different industries from finance to telecoms, Cloudflare wrote in its report on the attacks.\r\n\r\n“What’s astonishing is the attacker’s ability to orchestrate these various devices to launch coordinated attacks,” CloudFlare said.\r\n\r\n“The scale and frequency of these attacks are unprecedented,” Cloudflare said. “Due to their sheer size and bits/packets per second rates, these attacks have the ability to take down unprotected internet properties, as well as internet properties that are protected by on-premise equipment or by cloud providers that just don’t have sufficient network capacity or global coverage to be able to handle these volumes alongside legitimate traffic without impacting performance.”\r\n\r\nIn October last year, Cloudflare and Google reported they had mitigated what was previously the largest DDoS attack ever, which had used HTTP requests rather than UDP packets. In those cases, the attacks were recorded using a different measure, hitting 398 million requests per second, according to Google. There was no record for Tbps.\r\n\r\nWhile there was no obvious damage from the attacks, it may be that the perpetrators are getting ready to cause carnage. “Threat actors who possess record-shattering attack methods can have an extremely difficult time testing and understanding how large and effective they are, because they don\'t have the ability to absorb the attacks they are launching,” said Omer Yoachimik, senior product manager for DDoS protection at Cloudflare. “In cases such as this, threat actors often use Cloudflare or hosting providers protected by Cloudflare to understand the capabilities of their attack infrastructure.”\r\n\r\nGot a tip on surveillance or cybercrime? Get me on Signal at +1 929-512-7964.\r\n\r\n', 3, 3, '2024-10-07 15:53:20'),
(4, 'Everything You Need To Know About Java', 'https://admin.tops-int.com/storage/media/editor_images/41092.jpg', 'What is Java?\r\nJava is a programming language and computing platform that was first released in 1995. It is one of the most popular programming languages today, with an estimated 10 million developers worldwide. Java is used for various applications, including web development, mobile apps, and enterprise software.\r\n\r\nJava is a versatile and powerful language that enables developers to create robust, high-performance applications. The Java platform provides developers with comprehensive tools to build, test, and deploy their applications. Java also has a rich set of libraries and frameworks that can be used to create sophisticated applications.\r\n\r\nObject-oriented programming (OOP) helps developers design more maintainable and easier-to-understand software. OOP concepts such as encapsulation, inheritance, and polymorphism make it possible to create robust and scalable applications. Java is an object-oriented language that enables developers to create reusable code modules.\r\n\r\nJava is platform-independent, meaning that programs written in Java can run on any hardware or operating system. This makes it ideal for developing cross-platform applications. Java programs are compiled into bytecode, which can be executed by any Java Virtual Machine (JVM).\r\n\r\nSecurity is an important feature of Java. Java provides a secure environment for applications to run in. It uses a security model based on the sandboxing concept, meaning that applications and the underlying operating system are isolated from each other. This prevents malicious code from accessing sensitive data or damaging the system. Additionally, Java has built-in security features such as authentication and authorization, which allow developers to control who has access to their applications and data.\r\n\r\nJava also provides a secure development environment. It includes static analysis tools that can detect potential security vulnerabilities in code before deployment. Additionally, Java provides secure coding guidelines that help developers write secure code. These guidelines include best practices such as using strong encryption and avoiding common security vulnerabilities.\r\n\r\nAre you looking for comprehensive Java Training to learn the fundamentals of programming? TOPS Technologies is a Java Tutorial Point that provides an excellent Java Tutorial For Beginners, which is designed to help you gain a comprehensive understanding of the Java language. This Java Programming Tutorial will help you get started with your career.\r\n\r\nBenefits Of Java \r\nAutonomous Platform\r\n\r\nThe significant advantage of Java is its platform independence. The ability to create code on a single computer, which is then converted into the machine code of the local operating system, enables designers to enhance development across several devices.\r\n\r\nJava is compatible with Windows, macOS, and Linux. By executing code on many operating systems, Java developers can evaluate the functionality of the user interface on various platforms. Java app development also features incredible programming tools, making it much easier for developers to work on the platform and produce an application that satisfies all of their requirements.\r\n\r\nJava applications utilize well-known development tools. Potent tools are essential for Java to be the preferred programming language for Java android app development companies. The complex toolkits assist with coding and allow you to influence debugging, which is vital for mobile app development in the real world.\r\n\r\nObject-Oriented \r\n\r\nEvery Java corporate application is efficiently adaptable, extensible, and flexible due to the object-oriented structure of the programming language. Feature-rich applications can be created by Java developers employing configuration defaults.\r\n\r\nOpen-source software is more adaptable to the growth of mobile applications. It allows you to construct reusable, modular projects and code. It contains a comprehensive collection of design patterns and other best practices. Developers can use the source code to modify the application\'s coding to their specifications when creating Java Android apps, web, and apps.\r\n\r\nAdditionally, designers are open to specialized jobs and code reuse. They can quickly edit the application code using the source code.\r\n\r\nSimple Learning Curve & Open-Source\r\n\r\nDue to the simple requirement for acquiring information, there is a global abundance of Java engineers. The programming language is taught as a required topic at many of the finest colleges in the world. Designers can learn and acquire programming languages without getting caught down in the specifics.\r\n\r\nCustom programming development services are less expensive than other innovations due to the low expectation of learning and adapting and the abundance of designers. Because it is open-source, the development costs are drastically lowered. Similarly, open-source libraries accelerate application development, making it easier for firms to obtain a competitive advantage. Examine the leading Java development services.\r\n\r\nHigh-level languages are programming languages that resemble human language, and Java is one of them. In contrast to machine-like low-level languages, high-level languages must be translated using assemblers or translators. It facilitates the development of Java android applications and makes the language easier to design, comprehend, and manage.\r\n\r\nExtensive Community\r\n\r\nJava has the most significant local developer community in the world. They develop Java applications, assist with Java projects, and produce documentation for international usage by engineers. Employing programmers and assembling a Java team from the community is an option for organizations.\r\n\r\nThe Java community continually revises the language and supports many projects. Experienced designers often assist rookie engineers in becoming professionals in large business Java programming. Android developers can learn the fundamentals of this programming language from other community developers keen to grow their networks. Its developer community offers advice and statistics to help novices improve their Java application development skills.\r\n\r\nIn actuality, the group of competent and experienced developers is always glad to hear from you, whether you need assistance addressing a problem or need to engage in a discussion on the same subject.\r\n\r\nAndroid Application Development and Highest Security\r\n\r\nThe most prevalent application of Java app development is the creation of Android mobile applications. Businesses may utilize the programming language to create dynamic and secure smartphone applications. APIs and Java libraries can be pretty handy for designing various applications.\r\n\r\nAndroid applications built in Java are more popular than those written in other languages. The vibrancy of the language makes it ideal for several portable applications.\r\n\r\nOrganizations appreciate software development services because they are reliable and secure. The programming language has security capabilities to safeguard the application against phishing attacks, dangers, SQL injections, and other vulnerabilities. Java provides libraries that increase the program\'s security.\r\n\r\nDevelopers can readily detect vulnerabilities that may provide distinct hazards to data security. Java enhancements emphasize the development of secure applications at various phases. \r\n\r\nJava heavily emphasizes testing for potential early problems, as Java compilers can detect various issues that may develop during the initial execution phase of other languages. Due to its durability, ease of use, cross-platform development capabilities, and security features, Java application development has become the top alternative for Internet solutions worldwide.\r\n\r\nAre you interested in pursuing a career in the field of Java programming? If so, TOPS Technologies offers an excellent Java Training course to help you get started. Our Java Tutorial For Beginners covers everything you need to know about Java, from the basics to more advanced concepts, so you can set yourself up for success in this field.\r\n\r\nWhat Duties Do Java Developers Have?\r\nDepending on their level of expertise and the size of the organization they work in, a Java developer\'s duties can vary. Java developers are often responsible for creating applications using the Java programming language.\r\n\r\nIn addition, they may be responsible for coding unit tests, troubleshooting apps, and directing a team of junior and mid-level developers.\r\n\r\nCreating and Evaluating Code\r\n\r\nDeveloping code that adheres to standards and is of excellent quality is one of the most crucial duties of a Java developer. They must develop unit tests to verify the written code to achieve this. Unit tests are short bits of code that validate certain application functionality.\r\n\r\nJava programmers must also debug apps. This involves locating and resolving code errors. A unit test might verify, for instance, that a method in an application produces the desired result when given a certain input.\r\n\r\nIn addition, they must guarantee that the code is scalable, meaning it can manage greater loads without failing. To accomplish this, they must create integration tests, which verify how well the various components of an application function together.\r\n\r\nDevelopers of Java must also optimize code for performance. This involves ensuring that the code executes efficiently and rapidly. For instance, an integration test could verify that users can log in to an application and view their profile page.\r\n\r\nApplication Design and Optimization\r\n\r\nAn additional essential duty of a Java developer is to build complicated and scalable programs. Scalability refers to an application\'s capacity to accommodate a greater load without failing. For instance, if more users are using a program, it must be able to accommodate the extra traffic without crashing. Coding must be optimized for performance and scalability by Java developers. This involves ensuring that the code executes efficiently and rapidly.\r\n\r\nAdditionally, they must create programs with a solid user experience and an intuitive UI. User interface refers to the appearance and feel of an application. An application\'s navigation and use of features should be intuitive.\r\n\r\nLeading a Development Group \r\n\r\nIn certain circumstances, Java developers may also be responsible for directing a team of junior and intermediate developers. They would allocate assignments, review code, and offer feedback. Excellent communication skills and the capacity to work well with others are necessary for leading a group of developers. In addition, Java developers must be able to collaborate with several teams to create a unified program.\r\n\r\nFor instance, they may need to collaborate with the front-end development team to ensure the user interface is consistent with the remainder of the product.\r\n\r\nDebugging Problems\r\n\r\nWhen an application breaks or malfunctions, it is the Java developer\'s responsibility to locate and remedy the issue. This is referred to as debugging. Finding problems in hundreds of lines of code can make debugging difficult.\r\n\r\nJava programmers must possess good problem-solving abilities to debug efficiently. Additionally, they must be able to think imaginatively, as the solution to a problem is only sometimes evident.\r\n\r\nIn addition, Java developers must be able to collaborate with several teams to create a unified program. For instance, they may need to collaborate with the front-end development team to ensure the user interface is consistent with the remainder of the product.\r\n\r\nChanges and Software Architecture\r\n\r\nAs new versions of Java are published, the Java developer must update their applications to use the new version. In some instances, this may necessitate extensive code modifications. The Java developer is also responsible for maintaining the program\'s architecture.\r\n\r\nThis involves ensuring that the code is well-organized and simple to comprehend. Maintaining a solid program architecture is essential since it facilitates adding new features and eliminating bugs.\r\n\r\nIn addition, the IT infrastructure team may require assistance with setting up and configuring the servers. To construct a cohesive application, Java developers must have the ability to collaborate with several teams.\r\n\r\nAre you looking to Learn Java? Consider taking a Java course at TOPS Technologies! We offer comprehensive Java training to help launch your career in this field. We provide hands-on training to ensure that you gain a thorough understanding of the topics covered. Additionally, we offer certification programs to give you an edge in the job market. Our Full Stack Java Developer Course covers everything you need to know about Java to become successful.\r\n\r\n', 4, 4, '2024-10-07 15:53:20'),
(5, 'What Is AJAX (Asynchronous JavaScript and XML)? Meaning, Working, and Applications', 'https://images.spiceworks.com/800x400/wp-content/uploads/2023/03/02141635/shutterstock_381387703.jpg', 'What Is AJAX?\r\nAsynchronous JavaScript and XML (AJAX) develops highly interactive and responsive web applications by exploiting a set of technologies. It allows developers to update individual web page components in real time without reloading the entire webpage.\r\n\r\nBefore AJAX, whenever a part of webpage content needed to be changed or altered, the process would reload and refresh the whole webpage from the web server. The result of such a method was that it would create large portions of duplicated data in every instance. This problem was resolved with the introduction of AJAX, which allowed web parts to be updated asynchronously without reloading the entire page. This method ensured that updates were displayed almost instantaneously to end users.\r\n\r\nAJAX relies on the following technologies to carry out smooth data interchange between a browser and web server:\r\n\r\nXHTML and CSS: Data presentation\r\nHTML Document Object Model (DOM): Enable dynamic user interaction while displaying the updated content\r\nXMLHttpRequest object: Move, manipulate, and update data to and from the server\r\nXML, HTML, XSLT, and JSON: Manage data exchange with the server\r\nJavaScript: Couple data requests with the content display on the user side\r\nThe combination of these technologies is crucial in establishing seamless client-server communication without page reloads. As a result, users can interact better with the web application as this method can reload partial updates. Moreover, the technique gives users the power to control their computing environment, much like in traditional desktop applications.\r\n\r\nAdditionally, while the web server processes the necessary updates on webpages, users can continue to interact with the web application, unlike traditional applications where user interaction is stalled until the HTTP transport to and from the server is complete.\r\n\r\nWebpage content can be updated using AJAX in the following scenarios:\r\n\r\nUser-initiated events: For instance, if a user clicks on a specific button or hovers over a specific text, AJAX can come into action.\r\nPredefined time intervals: In some cases, updates may be scheduled every 10 seconds.\r\nApplication logic: If the user selects the drop-down menu that shows the top 100 US universities, AJAX can subsequently load and update the list of applicable US universities based on current rankings.\r\nIt is worthwhile to note that since AJAX is not reliant on web servers, it exercises a data-driven approach rather than the conventional page-driven technique. Consequently, the procedure can execute jobs in an asynchronous manner at any time. Owing to this ability to perform partial tasks independently, several browsers today, such as Mozilla Firefox (version 1.0 and above), Apple Safari (version 1.2 and above), Chrome, Microsoft Internet Explorer (version 5 and above), and Opera (version 7.6 and above) support AJAX technology.\r\n\r\nKey benefits of AJAX\r\nAJAX renders several benefits to web applications, such as:\r\n\r\nAJAX is a type of web browser technology that is based on open standards. It uses JavaScript libraries such as Dojo toolkits to enable AJAX applications that function across multiple browsers.\r\nAJAX applications work on browsers without the need for any additional software plugins.\r\nAJAX is used by several ecommerce companies, such as Shopify and online platforms, to enable intuitive user interactions. Ecommerce features such as listing products, adding products to a shopping cart, or streamlining the checkout process, such as one for Shopify, are all enabled by AJAX.\r\nAJAX is similar to Web 2.0 applications that use a group of technologies, collaborative applications, and knowledge sources, such as blogs, forums, and so on, to build the next generation of the internet.\r\nAJAX keeps a check on server traffic since server communication happens only for ‘bits of web content.’\r\nAJAX technology consumes less bandwidth, thanks to the principle of fetching only small packets of data from the server.\r\nAJAX improves overall user experience while interacting with web applications.\r\nSee More: What Is DevSecOps? Definition, Pipeline, Framework, and Best Practices for 2022\r\n\r\nHow Does AJAX Work?\r\nIn a conventional web application, the browser directly communicates with the server. The server responds by sending all the HTML and CSS code at once. Further, if the user makes another request from the webpage, then the server processes the new user data, performs the task of rebuilding the page, and then sends the newly built webpage to the user.\r\n\r\nWith AJAX, the webpage is loaded just once when the user makes the initial request. In case of any further user requests on a webpage, the AJAX engine captures the user data for the small segment of the webpage that needs to be updated and sends the request to the web server. The server then responds asynchronously by processing the requested content without interfering with the display and behavior of the existing webpage.\r\n\r\nWhile this reveals the working of a simple AJAX application, let’s dive into the technical steps involved in processing the AJAX requests. The workflow of AJAX begins with the browser reaching out to the server via the XMLHttpRequest object. The process follows a series of steps, as shown below:\r\n\r\nStep 1: First, the user instantiates the HTTP request via the user interface. This results in a JavaScript call forwarded to the JavaScript interpreter, also referred to as the AJAX engine, residing in the web browser.\r\nStep 2: In the second step, the AJAX engine sends the corresponding HTTP request via the XMLHttpRequest object to the web server.\r\nStep 3: Next, the web server connects to the underlying backend databases using JSP, ASP.net, and PHP, responsible for data handling and manipulation. Subsequently, data exchange occurs between the data store and the server, and the requested data is retrieved.\r\nStep 4: Next, the web server sends back the retrieved HTML, XML, or JavaScript data to the AJAX engine, also referred to as the XMLHttpRequest callback function.\r\nStep 5: Lastly, the JavaScript interpreter displays the HTML and CSS content on the UI of the browser.\r\nIn the AJAX environment, the developer is responsible for writing codes that not only make requests to the web server but also deal with the response. However, in a normal HTTP request, both these aspects are taken care of by the browser, and the developer is not held accountable for managing codes that initiate requests and handle responses to and from the server, respectively.\r\n\r\nWith AJAX, the developer has control of all web page components displayed to the end user. The developer can update any part of the webpage with ease just by employing a few dynamic DOM manipulation techniques that do not need the reloading of the entire page. All the updates happen in the background. Thus, AJAX works on the principle of ‘refresh without reload.’  \r\n\r\nMoreover, AJAX refines the traditional browser-server communication model by adding an additional functional layer in the form of an ‘AJAX engine.’ It acts as an intermediary between the user interactions with the client-server model.\r\n\r\nSee More: What Is TDD (Test Driven Development)? Process, Importance, and Limitations\r\n\r\nApplications of AJAX\r\nThe demand for responsive web applications has grown substantially in recent times. Today, users have become habitual in receiving instant updates while interacting with websites. This is why AJAX principles have been at the forefront of web technology.\r\n\r\nLet us understand some practical examples of AJAX that treat web applications much like desktop versions.\r\n\r\nAJAX Applications \r\nAJAX Applications\r\n\r\n1. Instant login systems\r\nWebsites such as Digg.com use a login system where the user need not open a separate login page to access their account. Instead, the original page of the site has an option for users to directly enter their credentials (i.e., username and password). When the user data is entered, the AJAX functionality then sends the login request to the target server. The server then responds by updating the login portion. Also, the web page lets you know that you have logged into the system. From thereon, the webpages are updated based on user actions.\r\n\r\n2. Autocomplete feature\r\nGoogle was the first organization to deploy AJAX technology across its products. Google’s autocomplete feature is a good example of AJAX. As users enter search queries on the Google search bar, the feature provides suggestions in real-time without refreshing the original web page during the process.\r\n\r\nApart from Google search, the autocomplete feature is suitable for forms requiring many user inputs. An alternative approach of providing a drop-down list can be cumbersome in many cases, as the list can end up becoming too long for the UI.\r\n\r\n3. Voting and rating systems\r\nSeveral websites allow users to decide and customize the information on their web pages based on their votes. For example, Digg and Reddit are social bookmarking sites that offer such functionality that allows users to vote for certain content and based on those votes, the site’s main content is updated.\r\n\r\nSuch sites use AJAX features to manage and handle user votes. As a result, users’ opinions on stories and content are considered valuable, and websites can continue to fine-tune their strategies to optimize user-facing content.\r\n\r\n4. Social media\r\nDue to its user-friendly interface, Twitter, the social media platform, has become popular over the years. When someone tweets, it is instantly added to the user’s feed, and everything on the site gets updated. Recently, Twitter added AJAX functionality to its ‘trending topics’ section. As a result, users receive updates every few seconds whenever new tweets are put out on trending topics. Twitter is an excellent example of how AJAX can not only update user content but also give them a hint on current user sentiments on specific topics.\r\n\r\n5. Form submission and validation\r\nAs mentioned earlier, AJAX can be employed for form submission and validation tasks where certain fields in the form require auto-filling while others continue to give suggestions on possible entries, much like the autocomplete feature. AJAX makes form filling much easier for end users since they need not worry about typos or other critical mistakes, such as entering irrelevant texts under the salary field.\r\n\r\nMoreover, AJAX is also used by some sites to validate the strength of user credentials such as passwords. In some cases, AJAX points out whether or not the user has entered a valid email or URL in the online form.\r\n\r\n6. Chats and instant messages\r\nOnline chatting has evolved in leaps and bounds from what it was back in the 1980s when Internet Relay Chat (IRC) was introduced. Today, several websites, such as Amazon, use the ‘customer support chat’ facility on their homepage. As users explore websites, they can simultaneously have a one-on-one conversation with customer service representatives without having to reload the entire webpage. This feature is a consequence of AJAX technology.\r\n\r\n7. Simple user interfaces\r\nAJAX is a popular tool used by developers to create simple yet efficient UIs. Such interfaces are easy to use since users can complete their tasks on one webpage. It is far more efficient than jumping from one page to another to finish a single task. This has two fundamental advantages: firstly, it makes the web application fairly quick and user-centric, and secondly, it gives better control over bandwidth and website load times since the number of user requests forwarded to the server is considerably lesser.\r\n\r\nFor example, Drop.io, an online file-sharing service, uses AJAX to enable slick user interfaces. Google has also unveiled AJAX-based applications such as Google Docs and Google Maps. The interface used by Google Maps allows users to update and change map views based on real-time user inputs.\r\n\r\n8. Widgets\r\nOne advantage of AJAX is its ability to make a call to multiple online servers while in operation. This implies that the webpage that uses JavaScript is not restricted to its own server but can also connect to other online servers. For example, the content management system of WordPress supports several plugins that work in this manner. Another example is Google Adsense. The scripts of Adsense, too, have a similar workflow.\r\n\r\n9. Lightboxes\r\nToday, several websites use pop-ups for targeted advertisements. However, such pop-ups are quite problematic for users. Instead, AJAX content can be coupled with lightboxes that overlay on webpages. Until the user responds to these lightbox displays, they cannot take any further action. This is generally observed in cases where a user tries to add his opinion or review on sites without logging in or registering. As the user tries to enter text, a pop-up appears that says, ‘you need to log in first.’ It is necessary for the user to respond to that pop-up to write a review or navigate the site. AJAX-enabled lightboxes are better suited for users than random pop-ups.\r\n\r\n10. Flash\r\nFlash refers to an animation toolkit used to create games, animations, and web page elements. Combining AJAX with flash further optimizes website designs. For example, Kongregate, a web gaming portal, uses flash APIs to update the profiles of players whenever they win a badge while playing an online game. As and when the player wins a reward, the flash APIs send a request to JavaScript, which uses AJAX features to update the player’s profile. The profile is thereby maintained in real-time.\r\n\r\nSee More: What Is Regression Testing? Definition, Techniques, and Tools\r\n\r\nTakeaway\r\nIn summary, AJAX is a client-side script that establishes a robust communication channel between the client and server side. Traditional desktop applications lacked the ability to maintain an explicit link with servers. It was only when the page was reloaded entirely that the client-server interaction could take place. However, AJAX broke this paradigm of page reloads, which, in turn, saved a lot of bandwidth for web apps.\r\n\r\nWith AJAX ushering in a new era in web development, the technology made internet applications much faster and more user-friendly.\r\n\r\nDid this article help you understand the role of AJAX in web applications? Let us know on FacebookOpens a new window , TwitterOpens a new window , or LinkedInOpens a new window . We’d love to hear from you!\r\n\r\n', 5, 5, '2024-10-07 16:01:56'),
(6, 'ReactJS: What And Why\r\n', 'https://images.ctfassets.net/7q3wfja5yi7p/4QiPL9hXRPkVhvb5rYvf82/714ff0d7bd3c1025963160b7ae9ef6a1/react-js-logo-2.jpg', 'React.js is the most popular front-end framework for Web applications. In this article, we will learn what React.js (or simply React or Reactjs) is and why we should use Reactjs.\r\n\r\nWhat is React.js?\r\nReact.js is an open-source JavaScript library that is used for building user interfaces specifically for single-page applications. It’s used for handling the view layer for web and mobile apps. React also allows us to create reusable UI components. React was first created by Jordan Walke, a software engineer working for Facebook. React first deployed on Facebook’s newsfeed in 2011 and on Instagram.com in 2012.\r\n\r\nReact allows developers to create large web applications that can change data, without reloading the page. The main purpose of React is to be fast, scalable, and simple. It works only on user interfaces in the application. React JS is also called simply to React or React.js.\r\n\r\nWhat are the React.js Features?\r\nLet us take a closer look at some important features of React.\r\n\r\nJSX\r\n\r\nIn React, instead of using regular JavaScript for templating, it uses JSX. JSX is a simple JavaScript that allows HTML quoting and uses these HTML tag syntax to render subcomponents. HTML syntax is processed into JavaScript calls of React Framework. We can also write in pure old JavaScript.\r\n\r\nData flow/Data Binding\r\n\r\nIn React, a set of immutable values are passed to the components renderer as properties in its HTML tags. The component cannot directly modify any properties but can pass a call back function with the help of which we can do modifications. This complete process is known as “properties flow down; actions flow up”.\r\n\r\nVirtual DOM\r\n\r\nReact creates an in-memory data structure cache which computes the changes made and then updates the browser. This allows a special feature that enables the programmer to code as if the whole page is rendered on each change whereas react library only renders components that actually change.\r\n\r\nReact native\r\n\r\nReact Native is a custom renderer for Reactjs. Instead of using web components, React Native uses native components.\r\n\r\nIn order to acquire a thorough understanding of React Native, a developer should be familiar with the basic Reactjs concepts. These include JSX, components, state, and props.\r\n\r\nAfter this stage, a developer is required to study the entire information specific to React Native, such as the native components.\r\n\r\nReact Native converts the React code to make it compatible with Android and iOS platforms. On top of that, it also provides access to the native features of these platforms.\r\n\r\nComponent-based architecture\r\n\r\nThe architecture of Reactjs is component-based. In other words, the UI of a React-based mobile or web application is divided into multiple components. Each component has its own specific logic. The logic is written in JavaScript instead of using templates. This enables Reactjs developers to pass the data throughout the application without affecting the DOM.\r\n\r\nThe components of Reactjs play a major role in determining interactions and visuals in the applications.\r\n\r\nWhy React?\r\nNow, the main question arises in front of us is why one should use React. There are so many open-source platforms for making the front-end web application development easier, like Angular. Let us take a quick look on the benefits of React over other competitive technologies or frameworks. With the front-end world-changing on a daily basis, it’s hard to devote time to learning a new framework — especially when that framework could ultimately become a dead end. So, if you’re looking for the next best thing but you’re feeling a little bit lost in the framework jungle, I suggest checking out React.\r\n\r\n1. Simplicity\r\n\r\nReactJS is just simpler to grasp right away. The component-based approach, well-defined lifecycle, and use of just plain JavaScript make React very simple to learn, build a professional web (and mobile applications), and support it. React uses a special syntax called JSX which allows you to mix HTML with JavaScript. This is not a requirement; Developer can still write in plain JavaScript but JSX is much easier to use.\r\n\r\n2. Easy to learn\r\n\r\nAnyone with a basic previous knowledge in programming can easily understand React while Angular and Ember are referred to as ‘Domain-specific Language’, implying that it is difficult to learn them. To react, you just need basic knowledge of CSS and HTML.\r\n\r\n3. Native Approach\r\n\r\nReact can be used to create mobile applications (React Native). And React is a diehard fan of reusability, meaning extensive code reusability is supported. So at the same time, we can make IOS, Android and Web applications.\r\n\r\n4. Data Binding\r\n\r\nReact uses one-way data binding and an application architecture called Flux controls the flow of data to components through one control point — the dispatcher. It’s easier to debug self-contained components of large ReactJS apps.\r\n\r\n5. Performance\r\n\r\nReact does not offer any concept of a built-in container for dependency. You can use Browserify, Require JS, EcmaScript 6 modules which we can use via Babel, ReactJS-di to inject dependencies automatically.\r\n\r\n6. Testability\r\n\r\nReactJS applications are super easy to test. React views can be treated as functions of the state, so we can manipulate with the state we pass to the ReactJS view and take a look at the output and triggered actions, events, functions, etc.\r\n\r\n7. SEO\r\n\r\nAn online business heavily relies on Search Engine Optimization (SEO) for its presence in the online market. The backend rendering in React JS websites significantly reduces the load time which makes them better optimized for search engines.\r\n\r\nIn addition to that, the benefits of high speed and performance enhance the overall performance and SEO functionality.\r\n\r\n8. Strong community support\r\n\r\nThe large ecosystem of Reactjs is one of the reasons why you should choose Reactjs for your next project. Since it was launched by Facebook, Reactjs is still supported by the company.\r\n\r\nOther than that, more than 1,000 independent contributors regularly update the library. Also, various experts post free blogs and videos about Reactjs which makes the community stronger.\r\n\r\n\r\n', 6, 6, '2024-10-07 16:17:12');
INSERT INTO `posts` (`id`, `title`, `image`, `description`, `category_id`, `user_id`, `create_at`) VALUES
(7, '8 Things You Should Know About Next.js 13\r\n', 'https://miro.medium.com/v2/resize:fit:1400/format:webp/0*HChqqcDc9efLjDUY.png', 'As I wrote about in my last article, the Next.js 13 App Router is finally stable as of version 13.4 and that means that it’s time to start considering using it in your next project.\r\n\r\nIn this article, we’ll dive into Next.js 13 and explore several things that you should know before using it for your next web app. Buckle up, because we’re about to take a thrilling ride into the future of web development.\r\n\r\nReact server components (RSC)\r\nThe new Next.js 13 App Router was built in close partnership with React 18. One of the major new features of React 18 is React Server Components (RSC). In order to start working in Next.js 13, you need to wrap your head around this new paradigm.\r\n\r\nIn the past, React was primarily a client-side UI rendering library. With the addition of RSCs, the intention is to render as much as your application as possible on the server at build-time (we will go into the different rendering modes more below).\r\n\r\nWhen a route is loaded with Next.js, the initial HTML is rendered on the server. This HTML is then progressively enhanced in the browser, allowing the client to take over the application and add interactivity, by asynchronously loading the Next.js and React client-side runtime.\r\n\r\n- From the React Essentials section on the Next.js documentation site\r\n\r\nIn React 18, two new directives, “use client” and “use server” were added in order to control where components are rendered at the file level. These new directives are used in Next.js 13 to control whether code is included in the client-side bundle or not.\r\n\r\nWith the “use server” directive, we can indicate that a component need not be included in the bundle that the client loads. The component will be rendered on the server at build or run time.\r\n\r\nAs you can see in the code below, we can also make use of async await in Server Components, which makes them great for loading data.\r\n\r\n// ServerComponent.ts\r\n\"use server\"\r\n\r\nexport default async function ServerComponent() {\r\n  const data = await fetchData()\r\n\r\n  return //...\r\n}\r\nIf a component needs to make use of React Hooks, such as useEffect, or it needs to access browser APIs, we can use the “use client” directive in order to indicate that the component should be included in the client bundle.\r\n\r\n// ClientComponent.tsx\r\n// use client is needed here since we are using React hooks and accessing\r\n// the localStorage browser API\r\n\"use client\"\r\nexport default function ClientComponent() {\r\n  const [todos, setTodos] = useState([])\r\n  useEffect(() => {\r\n    const cachedTodos = localStorage.get(\'todos\')\r\n    setTodos(todos)\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {todos.map(todo => <Todo {...todo} />)}\r\n    </>\r\n  )\r\n}\r\nSee the original React RFC where these directives were proposed for more information: https://github.com/reactjs/rfcs/pull/227\r\n\r\nServer components are the default in Next.js\r\nIn the world of Next.js 13, server components are now the default, which means that most of your components should not need a “use server” or “use client” directive.\r\n\r\nThe only time you need to use these directives is when you are creating a boundary component.\r\n\r\n// page.tsx\r\n// React Server Component, will not be included in the client \r\nexport default function Page() {\r\n\r\n  return (\r\n    <Provider>\r\n      <TodoList />\r\n    </Provider>\r\n  )\r\n}\r\n\r\n// TodoList.tsx\r\n// use client is needed here since we are using React hooks\r\n\"use client\"\r\nexport default function TodoList() {\r\n  useEffect(() => {})\r\n\r\n  return (\r\n    <>\r\n      {todos.map(todo => <Todo {...todo} />)}\r\n    </>\r\n  )\r\n}\r\n\r\n// TodoList.tsx\r\n// No \"use client\" needed here, even though we are using hooks\r\n// because this component is only ever rendered within another client component\r\nexport default function Todo() {\r\n  useEffect(() => {})\r\n\r\n  return (\r\n    <>\r\n      {todos.map(todo => <Todo {...todo} />)}\r\n    </>\r\n  )\r\n}\r\nClient components are rendered on the server too!\r\nWhen you use the “use client” directive to make a client component, it doesn’t mean that it only renders on the client-side. In fact, most client components are rendered on the server when doing server-side rendering (SSR) or static site generation (SSG).\r\n\r\nThe only time a client component will not be rendered on the server is when you specifically instruct it not to. One way to do this is by making use of next/dynamic with the ssr: false option (note: Vercel recommends using React.lazy and Suspense directly instead of next/dynamic):\r\n\r\nimport dynamic from \'next/dynamic\';\r\n \r\nconst DynamicHeader = dynamic(() => import(\'../components/header\'), {\r\n  ssr: false,\r\n});\r\nThis enables Next.js to be a truly hybrid framework and it promotes the goal of Next, which is to statically render as much content as possible and only include what’s needed by the client.\r\n\r\nWhat this means is that you need to think about how a client component will be rendered on the server. A way to test this is to disable JavaScript in your browser and see how the page renders. What you should see is that the page renders in its entirety but interactive elements are disabled.\r\n\r\nYou will want to make sure that no layout shift is introduced when elements become interactive, so make sure the component renders well before JavaScript is enabled, either by rendering the content by default or by making use of skeletons.\r\n\r\nComposing client and server components\r\nNext.js 13 offers an enhanced level of flexibility when it comes to composing your components. Server components can render other server components and client components. On the other hand, client components can render other client components and can only render server components if they are passed in as a prop. This layered composition model allows for a high degree of interoperability and code reusability.\r\n\r\nI get that the paragraph above is kind of mind-numbing. Here’s a nice diagram that the Vercel folks created to help you visualize this concept better:\r\n\r\n\r\nAnd here’s a quick example of h\r\n\r\nNext.js 13 rendering modes\r\nNext.js 13 introduces different render environments and modes, allowing you to choose the optimal rendering strategy for your app on a component-by-component basis.\r\n\r\nContent is rendered in two distinct environments:\r\n\r\nClient side — Client Components are pre-rendered and cached on the server. JSON is generated for data used on client components and passed to React during Hydration.\r\nServer side —Content is rendered on the server by React and static HTML is generated. React uses the static HTML to hydrate in the browser, requiring no additional JavaScript on the client.\r\nOn the server, there are two different rendering modes that are used:\r\n\r\nStatic — both client and server components are rendered as static HTML at build-time. Static content can be revalidated, allowing it to be updated on a page-by-page basis in order to keep dynamic data up-date with their sources. Statically generated content is easily cachable and leads to improved performance, user experience and search engine optimization.\r\nDynamic — both client and server components are rendered on the server when a request is made. The content is not cached.\r\nPrevious versions of Next.js had different terminology that it used for these concepts. I’m including them below and showing how the related to the new Next.js 13 terminology.\r\n\r\nStatic-site generation (SSG): Static rendering mode\r\nIncremental Static Regeneration (ISR): Static rendering mode with revalidation\r\nServer-side Rendering (SSR): Dynamic rendering mode\r\nClient-side Rendering (CSR): Client components\r\nMake sure to check out the Next.js documentation site on the topic.\r\n\r\nBarrel files are kind of broken\r\nIn the past, it was a common convention to add index files, sometimes referred to as barrel files, to modules in order to have nicer imports and to better control what was exported from them. For example, you might have a utils/ directory that has several files in with utilities in them:\r\n\r\n.\r\n└── utils/\r\n    ├── api.ts\r\n    ├── dom.ts\r\n    ├── formatter.ts\r\n    ├── parser.ts\r\n    └── index.ts\r\nThe index.ts file in this case might look something like:\r\n\r\nexport { default as parser } from \'./parser\'\r\nexport { default as formatter } from \'./formatter\'\r\nexport * from \'./api\'\r\nThis allows you to import one of your utils like:\r\n\r\nimport { parser } from \'utils\'\r\n// Rather than:\r\nimport parser from \'utils/parser\'\r\nThis pattern gets a bit tricky with Next.js 13 without being careful because it has the ability to accidentally leak server-only code into the client. Next.js has a helpful utility that allows you to add: import \"server-only\" to the top of a module so that you will be prevented from loading it into the client bundle. It’s recommended that you make use of this for your barrel files and to import client-side utilities from their direct paths. You can also add a separate “client-only” barrel file to ensure that modules meant for the client and server aren’t mixed.\r\n\r\nLibrary integration: a work in progress\r\nThe open-source community has made significant strides, but there are still some libraries that are not as well integrated as we’d like. For example, MUI, Emotion, Styled Components, and Apollo GraphQL all have slight issues or irregularities with the Next.js 13 App Router.\r\n\r\nFor instance, with Material UI (MUI), you might find yourself in a predicament where you have to resort to some, let’s say, “unorthodox” logic or, as an alternative, designate most of your components as client components. For more insights on this particular issue, I highly recommend visiting these GitHub discussions: issue #34896 and issue #34905.\r\n\r\nIf you’re working with Apollo, you might face situations where you need to fetch the same data on both the client and the server. The solution to this problem lies in hydrating Apollo’s cache, but it does require some elbow grease. Thankfully, Apollo has released an experimental package to assist with this; you can learn more about it here and read their official announcement.\r\n\r\nRoute groups\r\nRoute groups are a nifty feature introduced in Next.js 13, especially when your app requires multiple root layouts. Next.js 13.3 removed the deprecated head.js special file and replaced it with the generateMetadata API. One downside of this approach is that it made it difficult to add scripts other things to the <head> when you had pages that had different content.\r\n\r\nFor example, let’s say part of your app has navigation that is loaded from an API. The API returns head content for its script dependencies. Route groups give a solution to this problem by allowing you to split parts of your apps into different folders that have their own root layouts.\r\n\r\n.\r\n├── (navigation)/\r\n│   ├── dashboard/\r\n│   │   └── page.tsx\r\n│   └── layout.tsx\r\n└── (navless)/\r\n    ├── auth/\r\n    │   └── page.tsx\r\n    └── layout.tsx\r\nIn the example above, the dashboard page has its own root layout that can include the additional head content loaded from your API:\r\n\r\nimport { PropsWithChildren } from \'react\'\r\n\r\nexport default async function Layout({ children }: PropsWithChildren) {\r\n  const { head, header, footer } = await fetchNavigationMarkup()\r\n\r\n  return (\r\n    <html>\r\n      <head>\r\n        {head}\r\n      </head>\r\n      <body>\r\n        {header}\r\n        {children}\r\n        {footer}\r\n      </body>\r\n    </html>\r\n  )\r\n}\r\nMore resources\r\nNext.js docs\r\nNext.js React essentials\r\nZero bundle-size React server components\r\nWrapping it up\r\nIn this article, we dug into seven of the top things to know about before getting started with Next.js 13.\r\n\r\nFrom server components being the default, to the nuances of component composition, the quirks of library integration, the different render modes, and the introduction of route groups — there is a lot to know before getting started.\r\n\r\nWhile it’s not without its growing pains, Next.js 13 is a leap forward for the framework, pushing the boundaries of what’s possible in web development.\r\n\r\nAs you journey into the realm of Next.js 13, remember that with great power comes great responsibility. Use these features wisely, and you’ll be building some truly amazing web apps in no time. Stay curious, keep exploring, and never stop learning. Until next time, happy coding!', 7, 7, '2024-10-07 16:17:12'),
(8, 'What Exactly is Node.js? Explained for Beginners', 'https://www.freecodecamp.org/news/content/images/size/w2000/2022/11/What-is.png', 'By Benjamin Semah\r\n\r\nNode.js allows developers to create both front-end and back-end applications using JavaScript. It was released in 2009 by Ryan Dahl.\r\n\r\nIn this article, you will learn about Node.js. You will learn the following:\r\n\r\nWhat is Node.js?\r\nHow the Node.js environment differs from the browser.\r\nWhy you should learn Node.js.\r\nHow to get started with Node.js.\r\nResources to help you learn Node.js.\r\nWhat is Node.js?\r\n\"Node.js is an open-source and cross-platform JavaScript runtime environment.\" - Nodejs.dev Docs\r\n\r\nThis sounds like a cool, straightforward answer. But for a beginner, this definition might raise further questions. So let\'s break it down and understand what it means.\r\n\r\nNode.js is open-source: This means that the source code for Node.js is publicly available. And it\'s maintained by contributors from all over the world. The Node.js contribution guide shows you how to contribute.\r\n\r\nNode.js is cross-platform: Node.js is not dependent on any operating system software. It can work on Linux, macOS, or Windows.\r\n\r\nNode.js is a JavaScript runtime environment: When you write JavaScript code in your text editor, that code cannot perform any task unless you execute (or run) it. And to run your code, you need a runtime environment.\r\n\r\nBrowsers like Chrome and Firefox have runtime environments. That is why they can run JavaScript code. Before Node.js was created, JavaScript could only run in a browser. And it was used to build only front-end applications.\r\n\r\nNode.js provides a runtime environment outside of the browser. It\'s also built on the Chrome V8 JavaScript engine. This makes it possible to build back-end applications using the same JavaScript programming language you may be familiar with.\r\n\r\nDifferences Between the Browser and Node.js Runtime Environments\r\nBoth the browser and Node.js are capable of executing JavaScript programs. But there are some key differences that you need to know. They include the following.\r\n\r\nAccess to the DOM APIs\r\nWith the browser runtime, you can access the Document Object Model (DOM). And you can perform all the DOM operations. But Node.js does not have access to the DOM.\r\n\r\nNode.js exposes almost all the system resources to your programs. This means you can interact with the operating system, access the file systems, and read and write to the files. But, you do not have access to operating systems and file systems from the browser.\r\n\r\nWindow vs Global object\r\nJavaScript has a built-in global object. The JavaScript global object for the browser is called the window object. In Node.js, the global object goes by the name global.\r\n\r\nThe window object contains methods and properties available only in the browser environment.\r\n\r\nControl over runtime versions\r\nWith Node.js, you can choose which version to run your server-side application on. As a result, you can use modern JavaScript features without worrying about any version-specific inconsistencies.\r\n\r\nContrast this to the browser runtime environment. As a developer, you have no control over the version of browsers your clients use to access your app.\r\n\r\nLoading modules (import vs require keywords)\r\nNode.js offers out-of-the-box support for CommonJS and ES modules. You can load modules using the require keyword (CommonJS syntax) and the import keyword (ES syntax).\r\n\r\nSome modern browsers support ES modules. This means you can use import ES modules. But you will still need to create bundles to cater to older browsers that do not support ES modules.\r\n\r\nHow Much JavaScript Do You Need to Get Started with Node?\r\nIf you are an absolute beginner to JavaScript, I recommend that you start with the basics.\r\n\r\nBecome familiar with basic JavaScript concepts first. Then, you can move on to learning to build server-side applications with Node.js.\r\n\r\nThere\'s no way you\'ll ever exhaust all there is to learn about JavaScript. So, how to determine when you know enough JavaScript to get started with Node.js?\r\n\r\nThe Nodejs.dev documentation provides a list of JavaScript topics to learn before diving deep with Node.js.\r\n\r\nOnce you have a grasp of JavaScript basics, then you can get started with Node.js\r\n\r\nHow to Get Started with Node.js\r\nLet\'s see how you can create your first Node.js application. This section will show you how to run Node.js scripts from the command line.\r\n\r\nHow to download and install Node.js\r\nFirst, you need to download and install Node.js. There are different ways you can do that. If you are a beginner, I would suggest that you download Node.js from the official website.', 8, 8, '2024-10-07 16:22:28'),
(9, 'Why We Use Django Framework & How It Can Benefit Your Business\r\n', 'https://media.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhm4tppwb4qqwmdyjguka.jpg', 'I am a former developer with more than a decade of experience in coding.\r\n\r\nThroughout that time, I used a wide range of coding languages and frameworks from Python/Django, PHP/Laravel, Javascript/ReactJS to C++, Basic, and Pascal. But nothing stuck with me more than Python and Django web framework in particular.\r\n\r\nAnd I often got the questions from the clients: why Django framework?\r\n\r\nWe tried out different approaches and various web frameworks while developing projects in our agency, but there were always some issues, such as time inefficiency or lack of scalability.\r\n\r\nMeanwhile, the Django web framework has never disappointed.\r\n\r\nUtilizing our extensive experience and hard-earned perspective, we want to share our opinions.\r\n\r\nIn this article, I’ll show you when the Django framework is good when it is not, and some key benefits for entrepreneurs while building their software products.\r\n\r\nSo, let’s dive right in!\r\n\r\nDjango in a Nutshell\r\n\r\nImage description\r\nFirst things first, what does Django do?\r\n\r\nShort overview of Django\r\nDjango is a Python-based open-source framework, released in 2005. And for 16 years, it has helped developers worldwide solve complex issues and create great projects.\r\n\r\nThe framework follows MTV architectural patterns, which means model-template-architecture. This type of pattern is especially beneficial for large projects and web applications because it allows us to differentiate the process of working with data, layout, and logic.\r\n\r\nIf you would like to learn more about web frameworks and how they can affect your business, check out our article.\r\n\r\nExpress self-check if you need Django\r\nWhat can you make with the Django web framework? If you can agree with the following statements, then Django will be the perfect tool for its fulfillment:\r\n\r\nYou want to use open-source and not pay for licenses\r\nYou need extensive documentation and a supportive community in case you get stuck and will need help from the side\r\nYour project is about web application development or API backend\r\nYour core principles are moving ahead fast, deploying fast, making lots of changes along the way, and saving some bucks\r\nYou will need to scale the project up and down at any point in time\r\nYou consider using cutting-edge technology in the future, including machine learning and AI\r\nDjango most definitely will pleasantly surprise you in its functionality and possibilities if any of the mentioned statements are about your project.\r\n\r\nReasons to use Django\r\nWe aren’t the only ones who favor Django. Today, there are 90.125 websites and 55.992 unique domains registered on Django. Every company has a different reason to use Django due to its extensive benefits. Here’s our list of characteristics that make Django our favorite.\r\n\r\nDjango is fast\r\n\r\nImage description\r\nThe primary goal of the Django web framework was to help developers turn concepts into projects as fast as possible.\r\n\r\nHow does Django reach such a fast pace?\r\n\r\nIt utilizes principles of rapid development where a developer can do more than one iteration at a time instead of starting the whole schedule from scratch.\r\n\r\nDjango also uses the DRY principle, or Don’t Repeat Yourself. As a result, the developers can reuse the existing code for other purposes without wasting time writing it from scratch.\r\n\r\nWhat does it mean for you as a project founder? Less time spent on the coding will result in less spent resources without damaging the quality of the code. For example, when we worked on our project ToDoo, it took six weeks to launch it on Linux. And in two days, it was also working on macOS and Windows.\r\n\r\nDjango is fully loaded\r\n\r\nImage description\r\nWith Django, you can benefit from tons of extra features to tackle everyday web development tasks. It allows you to manage user authentication, content administration, site maps, RSS feeds, and many other tasks.\r\n\r\nDjango also has a dynamic admin interface. Once you define your models, the framework creates a professional, production-ready administrative interface. Meaning, authenticated users can add, change and delete objects.\r\n\r\nWhat’s in it for you? If your employees edit your site, or a client, or maybe just you, you won’t have to deal with creating backend interfaces only to manage content.\r\n\r\nOne typical workflow in creating Django apps is creating models and getting the admin sites up and running as fast as possible, so your staff (or clients) can start populating data. Then, develop the way data is presented to the public.\r\n\r\nDropbox has been using Django right from the start. Dropbox’s developers use Django’s extensive features to store and share files, synchronize accounts across multiple devices, and provide file history quickly and effortlessly.\r\n\r\nDjango is scalable\r\n\r\nImage description\r\nSome of the busiest sites on the planet use Django’s ability to quickly and flexibly scale to meet the heaviest traffic demands. Compared to development time, hardware is cheap, so Django is designed to take advantage of as much hardware as you can throw at it.\r\n\r\nDjango uses a “shared-nothing” architecture, which means you can add hardware at any level – database servers, caching servers, or web/application servers.\r\n\r\nThe framework cleanly separates components such as its database layer and application layer. And it ships with a simple-yet-powerful cache framework.\r\n\r\nWe’ve already mentioned the ToDoo project today, and it’s worth mentioning again. ToDoo is an online student cabinet app. For it, we configured six server setups, and with just 250$ monthly payment for these services at Digital Ocean, we could handle 10.000 active students online. Without any caching or complex performance tuning.\r\n\r\nDjango is versatile\r\n\r\nImage description\r\nCompanies, organizations, and governments have used Django to build all sorts of things — from content management systems to social networks to scientific computing platforms.\r\n\r\nPlus, Django works wonders in demanding industries, like Fintech, where products must be 100% secure, trustworthy, and adhere to state and international regulations.\r\n\r\nWhen we were developing a custom CRM – LocalPower for a Texas-based client – Solar Panel Agency it was planned to be used by our client only as an internal team’s tool.\r\n\r\nBut then the client decided to repurpose it to SaaS and sell it to other peer agencies. And it took us only a few more months to refactor the Django backend to fit the multi-tenant architecture.\r\n\r\nImage description\r\nDjango has an extensive community\r\n\r\nImage description\r\nAn extensive Django community means that you won’t experience problems finding a developer for your project. Even more, you’ll be able to choose out of a vast pool of specialists, considering your capabilities and resources.\r\n\r\nOnce, we had clients who wanted to build their projects on the Go or Elixir language. We didn’t have specialists in these languages and asked around to find ones. Yet, we didn’t find a single developer working with these programming languages.\r\n\r\nAfter we communicated this to our clients and explained that we had a team of developers ready to start working on it any minute using the Django web framework, they agreed to it. The clients were 100% satisfied with the result and didn’t regret going with Django instead of their original decision.\r\n\r\nDjango is secure\r\n\r\nImage description\r\nThe Django framework includes a built-in security feature that protects your app from various security threats.\r\n\r\nThe framework helps developers avoid many common security mistakes, such as SQL injection, cross-site scripting, cross-site request forgery, and clickjacking. In addition, its user authentication system provides a secure way to manage user accounts and passwords.\r\n\r\nWhen we were developing a website for an eCommerce business, security was a crucial issue because we needed to ensure the protection of the transaction and personal data of the buyers.\r\n\r\nWith Django, it wasn’t a problem due to the built-in security features. As a result, we didn’t need to spend additional time creating extra security layers and completed the project in several weeks.\r\n\r\nWhen to use Django\r\nDjango is such a universal web framework that it can be used for almost any project. Yet, there are cases why the Django framework will be especially beneficial in use.\r\n\r\nSo, what can you make with Django?\r\n\r\nSoftware as a Service\r\nSaaS companies deliver applications over the Internet as a service. You don’t need to download or install software; instead, you can just access it via the Internet.\r\n\r\nDjango is the right choice for building a SaaS solution because it has sufficient resources for users managing and customization, creating customer-specific subdomains, supporting multiple databases, and many more.\r\n\r\nWe’ve already mentioned Dropbox today, which used Python as their main tech stack right from the beginning, including the Django web framework.\r\n\r\nMarketplaces\r\nMarketplaces are platforms for buying and selling products. You heard about Amazon and eBay for sure, but there are tons of other marketplaces as well.\r\n\r\nWhen we were working with a marketplace company that had a fast-growing community of users, their main concern was the need for fast and accessible scaling. With Django, we handled their project without a single issue, even when their business developed in rapid terms.\r\n\r\nFintech companies\r\nFintech companies provide automated and improved financial services. Today, people expect money transferring, lending, or loan management to be quick and easy, and fintech companies offer them such solutions.\r\n\r\nDeveloping a money transfer application, our clients emphasized the significance of security so their customers’ data wouldn’t be compromised. With Django’s built-in security features, we didn’t need to spend extra time figuring out how to ensure security.\r\n\r\nMarketing automation tools\r\nMarketing automation software allows you to target customers with automated messages via email, web, social, and texts. In addition, these tools enable synchronizing marketing processes and multifunctional campaigns across different channels.\r\n\r\nEventbrite is an event management and ticketing service using Django for over a decade. They migrated to the web framework in 2010 because it allows URL routing, form building, unit tests, and many more features.\r\n\r\nSocial networks\r\nInstagram or Facebook instantly come to mind when talking about social networks, but there are many more of them. Social networks are platforms for gathering people and creating communities united by one or more characteristics.\r\n\r\nWhen writing this article, we worked on the KidiBoard project – a social network for parents.\r\n\r\nScreenshot Kidiboard Project\r\n\r\nImage description\r\nThis platform includes social feeds and friend circles as well as marketplace, chats, and calendar logistics tools to manage kids’ schedules.\r\n\r\nUsing Django on this project allowed us to focus on the customization options and provide the customers with an app where every user could customize and make their profiles more personal.\r\n\r\nData analytics tools\r\nThis software collects and analyzes data about a business, its customers, and/or competitors in order to improve the company processes and uncover new facts to make data-driven decisions.\r\n\r\nDjango is a Python web framework, and Python is one of the most powerful data analytics tools with the development of analytical and statistical libraries like NumPy or SciPy.\r\n\r\nMongoDB is a big data analytics tool that supports multiple companies and technologies. They integrate with Django and allow users to build secure and easy-to-maintain applications.\r\n\r\nWe also implemented a lot of analytics dashboards similar to Revenue Compass:\r\n\r\nImage description\r\nCustomer relationships management (CRM) systems\r\nCRM is a technology that allows you to manage all of the company’s relationships and interactions with clients or potential clients. With CRM, you stay connected with customers, streamline processes, and improve profitability.\r\n\r\nWhen working on a CRM system for our clients, we used the Django web framework and finished the project in just several weeks. Django’s extensive library support allowed us to use a bunch of prewritten code and cut the time.\r\n\r\nOne of the recent CRM apps we’ve built was LocalPower – CRM for solar agencies:\r\n\r\nImage description\r\nBusiness automation tools\r\nYou don’t spend time on repetitive, day-to-day tasks with a business automation tool. They also allow your employees to focus on the more creative and strategic processes.\r\n\r\nZapier is one of the most popular automation tools that lets businesses connect all the apps and streamline the work processes. Python powers most of their backend, and Django is the preferred framework for the HTTP side of things.\r\n\r\nAnother great example of a business automation tool we built recently is DashPro – SalesForce and paid ads platforms automation software:\r\n\r\nImage description\r\nDocument management systems\r\nThese systems are used to receive, store, track, and manage documents. More secure and comfortable in use than physical storage, they become a must in legal, healthcare, real estate, etc.\r\n\r\npCloud is one of the many secure encrypted cloud storages that lets you store your personal or company’s files. pCloud used Python API in their work, and there’s a Python library specific for this project.\r\n\r\nWhen not to use Django\r\nWhile Django is the proper framework for many projects, it’s not a perfect solution for everything as any other tool.\r\n\r\nIn some cases, it won’t be the most beneficial for you.\r\n\r\nIf your project obtains the following characteristics, then Django maybe not the first option to consider:\r\n\r\nYou need to build a very basic app that doesn’t require such things as database, file operations, or anything that requires any complexity. For example, a simple marketing website with a few pages, an online portfolio, a personal blog, or a basic forum.\r\nIf your product is another Facebook or Instagram, you’ll probably reinvent your own software frameworks and even programming languages. That’s when no out-of-the-box framework satisfies your needs.\r\nIf you need to build a desktop program, mobile app, gaming console, or ATM software, Django will cover, obviously, only the backend side. You’ll have to use a complimentary front-end-based framework for your front-end (user interface).\r\nIf these are not the cases, don’t doubt and choose Django for your future projects.\r\n\r\nExamples of companies using Django\r\n\r\nImage description\r\nLarge companies and small startups all use Django to bring their projects to life. Let’s review a few companies that successfully accumulated Django in their work process.\r\n\r\nSpotify is aт example of a giant company with nearly 350 monthly listeners, which turned to Django web framework. They list Django’s speed, community, machine learning, and AI options as the main reasons for choosing it.\r\n\r\nOne more company that needs no introduction and uses Django is Netflix. Netflix’s developers use the Django web framework for full content development and utilize its open-source packages for their needs.\r\n\r\nFacebook also uses Django in their work. In fact, Django’s responsible for more than 20% of Facebook’s infrastructure. That’s because Django allows smooth and effortless uploading of posts, pictures, and update statuses.\r\n\r\nSome companies didn’t use the Django web framework from the start, like Mozilla. However, as the company grew, it faced low performance and slow loading. To resolve this issue, they turned to Django, which was an all-in-one solution for these problems.\r\n\r\nThe list goes on and on, and if you want to learn about more companies that stick with Django, check our article.\r\n\r\nSum up\r\nWe’ve actively been using Django for seven years and haven’t regretted it once. After all those years, it’s hard to point out even one disadvantage of using this framework in our experience.\r\n\r\nAnd we aren’t the only ones. It’s hard to find a niche or a type of business that hasn’t used the Django web framework. SaaS companies, social networks, fintech companies, marketplaces, and many more build their websites and platforms on Django.\r\n\r\nSo, why use Django?\r\n\r\nBecause Django is a fast, simple, secure, and reliable web framework that gives you maximum efficiency in the minimum terms.\r\n\r\nSo, if you are looking for a team to build your project, don’t hesitate to contact us! We will be glad to answer all your questions.', 9, 9, '2024-10-07 16:22:28'),
(10, 'Ten reasons why Laravel is the best PHP framework', 'https://res.cloudinary.com/proxify-io/image/upload/f_auto,dpr_auto,c_fill,q_auto:best,w_1728,h_720/v1/cms/images/articles/BVjJEUHbnrx9SSoHQO2b2bWPDP7LL5TmD1Bk5ITl.png', '\r\nIf you are a web developer, you probably use PHP. For a developer, time is valuable, and you shouldn\'t spend time creating things that were implemented successfully years ago in Laravel.\r\n\r\nIn this article, I will try to convince you why this framework is the best for PHP and will make your dev life a lot easier.\r\n\r\nWhy should I care about PHP frameworks anyways?\r\nWell, to start answering this question, I first want to elaborate on what we understand by the word “framework.”\r\n\r\nA framework is a system that you can build software on top of. It serves as a basis, so you\'re not starting entirely from scratch.\r\n\r\nAs web developers, we shouldn\'t waste time creating things like login systems repeatedly when it’s already done in a safe and efficient framework method. And the one with the best basis for web development in PHP is Laravel. Why? I’ll give my ten reasons below.\r\n\r\n1. Composer\r\nA packaging system takes care of the various supporting programs or libraries that enable the web application to automate the procedure.\r\n\r\nTo maintain all the data required to manage packages, Laravel uses a composer for dependency management.\r\n\r\nPackages offer the functionality we need right out of the box, which is a terrific method to speed up development. Some of the top Laravel packages are from Spatie – check them out.\r\n\r\n2. Artisan CLI\r\nArtisan is the name of Laravel\'s CLI-[Command-Line-Interface]. Artisan is commonly used for publishing package assets, database migration management, and seeding and generating boilerplate code for new controllers, models, and migrations.\r\n\r\nThis CLI relieves the developer of the burden of creating code skeletons. Artisan\'s functionality and capabilities can be expanded by implementing new custom commands.\r\n\r\n3. File systems\r\nAdditionally, Laravel includes built-in support for local storage and cloud storage services like Amazon S3 and Rack space Cloud Storage. Since the API is the same for each system, switching between different storage alternatives is remarkably easy. To serve files from many places like in a distributed environment, one can employ all three technologies together in a single application.\r\n\r\n4. Broadcasting and events\r\nTo incorporate real-time data, show live feeds, etc. In current online applications, Laravel provides a notion called broadcasting. You can access real-time data from the application by using broadcasting, which enables you to share the same event name between the server-side and client-side of your application.\r\n\r\n5. Model-View-Controller support\r\nOut of the box, Laravel has Model-View-Controller support. It’s a software architectural pattern that divides the application into three components that helps in areas such as: “simultaneous development,” “scalability,” and “reusability,” etc.\r\n\r\n\r\nModel-View-Controller support\r\n\r\n6. Authentication and authorization\r\nThe Authentication and Authorization system is already configured by default in Laravel. Your application will have a secure login system in just a few artisan instructions, this will take some stress of you having Laravel handle security because it’s well used and open source.\r\n\r\n7. Unit testing\r\nWhen it comes to testing the application, Laravel, by default, offers the unit test for the app, which also includes tests to find and stop framework regressions. In a Laravel application, integrating PHP unit tools like a testing framework is fairly simple. Additionally, using the artisan CLI tool, we can execute unit tests.\r\n\r\n8. Scheduler: scheduling tasks\r\nThe Artisan command-line tool now includes Scheduler, which enables programmatic scheduling of tasks that are carried out on a recurring basis. Scheduler internally uses the cron daemon to launch a single Artisan job, which then performs the configured tasks.\r\n\r\n9. Blade: templating engine\r\nBlade Template Engine is the default template engine included with Laravel. The Blade templating engine combines templates with a data model to create the final views. For faster performance, the templates are converted into cached PHP code. Additional control structures offered by Blade include conditional statements and loops.\r\n\r\n10. Eloquent: object-relational mapping\r\nAn ORM is software that simplifies the handling of database records by representing them as objects. Laravel\'s built-in ORM implementation is the Eloquent ORM. In comparison to other frameworks, Laravel has the best Object-Relational Mapper, and I have to add that Eloquent makes working with Relationships really easy and clean', 10, 10, '2024-10-07 16:26:33');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `profile` varchar(255) NOT NULL,
  `role` varchar(255) NOT NULL,
  `create_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `name`, `email`, `password`, `profile`, `role`, `create_at`) VALUES
(1, 'Mg Mg', 'mgmg123@gmail.com', 'mgmg123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQxkmRuaPPz3SU9A5hYKfhv3-FQoItUW9KYvw&s', 'admin', '2024-10-07 15:10:05'),
(2, 'Kyaw Kyaw', 'kyawkyaw123@gmail.com', 'kyawkyaw123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQn8AjZgzH-nX-51el_14JWv00IEBWqiTGsIg&s', 'admin', '2024-10-07 15:20:21'),
(3, 'Zaw Zaw', 'zaw123@gmail.com', 'zaw123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSiYCO0iCBcsI5XT2WvQ15XCwxxQa3TP0almg&s', 'admin', '2024-10-07 15:20:21'),
(4, 'Tun Tun', 'tun123@gmail.com', 'tun123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRcUX0DmkN3oKtg6VjyKGfqIizXpuu-OfnchA&s', 'admin', '2024-10-07 15:20:21'),
(5, 'Hla Hla', 'hla123@gmail.com', 'hla123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ0sNdR2dl_-pz_Nr-OCQylvhY2Bj4S8TAkyg&s', 'admin', '2024-10-07 15:20:21'),
(6, 'Thuzar', 'thu123@gmail.com', 'thu123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdHoEvVXwwHJQEFlclzVc_wrEELWYQEbd6mw&s', 'author', '2024-10-07 15:20:21'),
(7, 'Myint Myint', 'myint123@gmail.com', 'myint123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSYFA-mWLftUfZVGZhcJi_1xZXVsLzUIQvTqg&s', 'author', '2024-10-07 15:20:21'),
(8, 'Theingi', 'thein123@gmail.com', 'thein123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSzn4d851OKkmhRNkLl7bvAKuEGYXp9vHnLfA&s', 'author', '2024-10-07 15:20:21'),
(9, 'Hnin Hnin', 'hnin123@gmail.com', 'hnin123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQhCrHznNk9UosgKP333LpN6_f8lzfmP6Fk_w&s', 'author', '2024-10-07 15:20:21'),
(10, 'Aung Aung', 'aung123@gmail.com', 'aung123', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRY1_ohkN9QbGkueDnQcopZKtL3E8Oph1Svfg&s', 'author', '2024-10-07 15:20:21');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `categories`
--
ALTER TABLE `categories`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT for table `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
